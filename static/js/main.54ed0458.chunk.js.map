{"version":3,"sources":["data/iso_countries.js","App.js","serviceWorker.js","index.js"],"names":["countries","App","chartRef","React","createRef","state","country","slice","data","chart","visualization","deathsDataset","confirmedDataset","recoveredDataset","changeCountry","e","console","log","setState","target","value","changeDays","switchDeathsDataset","checked","updateGraph","switchConfirmedDataset","switchRecoveredDataset","handleVisualizationChange","this","datasets","labels","pluck","confirmed","fetchDataByVisualization","push","label","borderColor","backgroundColor","fill","deaths","recovered","config","type","options","responsive","title","display","text","tooltips","mode","intersect","hover","scales","xAxes","scaleLabel","labelString","yAxes","myChartRef","current","getContext","destroy","Chart","fetch","then","response","json","myJson","buildFormattedData","map","index","previousElement","undefined","date","buildDataForKey","previousValue","keyName","currentValue","absolute","percent","increment","percentIncrement","parseFloat","toFixed","fetchData","Grid","container","spacing","item","xs","FormControlLabel","control","Checkbox","name","color","onChange","FormControl","fullWidth","InputLabel","id","Select","labelId","MenuItem","key","TextField","Button","variant","onClick","ref","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.54ed0458.chunk.js","sourcesContent":["const countries = [\n  {\n    \"name\": \"Afghanistan\",\n    \"alpha-3\": \"AFG\",\n    \"country-code\": \"004\"\n  },\n  {\n    \"name\": \"Åland Islands\",\n    \"alpha-3\": \"ALA\",\n    \"country-code\": \"248\"\n  },\n  {\n    \"name\": \"Albania\",\n    \"alpha-3\": \"ALB\",\n    \"country-code\": \"008\"\n  },\n  {\n    \"name\": \"Algeria\",\n    \"alpha-3\": \"DZA\",\n    \"country-code\": \"012\"\n  },\n  {\n    \"name\": \"American Samoa\",\n    \"alpha-3\": \"ASM\",\n    \"country-code\": \"016\"\n  },\n  {\n    \"name\": \"Andorra\",\n    \"alpha-3\": \"AND\",\n    \"country-code\": \"020\"\n  },\n  {\n    \"name\": \"Angola\",\n    \"alpha-3\": \"AGO\",\n    \"country-code\": \"024\"\n  },\n  {\n    \"name\": \"Anguilla\",\n    \"alpha-3\": \"AIA\",\n    \"country-code\": \"660\"\n  },\n  {\n    \"name\": \"Antarctica\",\n    \"alpha-3\": \"ATA\",\n    \"country-code\": \"010\"\n  },\n  {\n    \"name\": \"Antigua and Barbuda\",\n    \"alpha-3\": \"ATG\",\n    \"country-code\": \"028\"\n  },\n  {\n    \"name\": \"Argentina\",\n    \"alpha-3\": \"ARG\",\n    \"country-code\": \"032\"\n  },\n  {\n    \"name\": \"Armenia\",\n    \"alpha-3\": \"ARM\",\n    \"country-code\": \"051\"\n  },\n  {\n    \"name\": \"Aruba\",\n    \"alpha-3\": \"ABW\",\n    \"country-code\": \"533\"\n  },\n  {\n    \"name\": \"Australia\",\n    \"alpha-3\": \"AUS\",\n    \"country-code\": \"036\"\n  },\n  {\n    \"name\": \"Austria\",\n    \"alpha-3\": \"AUT\",\n    \"country-code\": \"040\"\n  },\n  {\n    \"name\": \"Azerbaijan\",\n    \"alpha-3\": \"AZE\",\n    \"country-code\": \"031\"\n  },\n  {\n    \"name\": \"Bahamas\",\n    \"alpha-3\": \"BHS\",\n    \"country-code\": \"044\"\n  },\n  {\n    \"name\": \"Bahrain\",\n    \"alpha-3\": \"BHR\",\n    \"country-code\": \"048\"\n  },\n  {\n    \"name\": \"Bangladesh\",\n    \"alpha-3\": \"BGD\",\n    \"country-code\": \"050\"\n  },\n  {\n    \"name\": \"Barbados\",\n    \"alpha-3\": \"BRB\",\n    \"country-code\": \"052\"\n  },\n  {\n    \"name\": \"Belarus\",\n    \"alpha-3\": \"BLR\",\n    \"country-code\": \"112\"\n  },\n  {\n    \"name\": \"Belgium\",\n    \"alpha-3\": \"BEL\",\n    \"country-code\": \"056\"\n  },\n  {\n    \"name\": \"Belize\",\n    \"alpha-3\": \"BLZ\",\n    \"country-code\": \"084\"\n  },\n  {\n    \"name\": \"Benin\",\n    \"alpha-3\": \"BEN\",\n    \"country-code\": \"204\"\n  },\n  {\n    \"name\": \"Bermuda\",\n    \"alpha-3\": \"BMU\",\n    \"country-code\": \"060\"\n  },\n  {\n    \"name\": \"Bhutan\",\n    \"alpha-3\": \"BTN\",\n    \"country-code\": \"064\"\n  },\n  {\n    \"name\": \"Bolivia (Plurinational State of)\",\n    \"alpha-3\": \"BOL\",\n    \"country-code\": \"068\"\n  },\n  {\n    \"name\": \"Bonaire, Sint Eustatius and Saba\",\n    \"alpha-3\": \"BES\",\n    \"country-code\": \"535\"\n  },\n  {\n    \"name\": \"Bosnia and Herzegovina\",\n    \"alpha-3\": \"BIH\",\n    \"country-code\": \"070\"\n  },\n  {\n    \"name\": \"Botswana\",\n    \"alpha-3\": \"BWA\",\n    \"country-code\": \"072\"\n  },\n  {\n    \"name\": \"Bouvet Island\",\n    \"alpha-3\": \"BVT\",\n    \"country-code\": \"074\"\n  },\n  {\n    \"name\": \"Brazil\",\n    \"alpha-3\": \"BRA\",\n    \"country-code\": \"076\"\n  },\n  {\n    \"name\": \"British Indian Ocean Territory\",\n    \"alpha-3\": \"IOT\",\n    \"country-code\": \"086\"\n  },\n  {\n    \"name\": \"Brunei Darussalam\",\n    \"alpha-3\": \"BRN\",\n    \"country-code\": \"096\"\n  },\n  {\n    \"name\": \"Bulgaria\",\n    \"alpha-3\": \"BGR\",\n    \"country-code\": \"100\"\n  },\n  {\n    \"name\": \"Burkina Faso\",\n    \"alpha-3\": \"BFA\",\n    \"country-code\": \"854\"\n  },\n  {\n    \"name\": \"Burundi\",\n    \"alpha-3\": \"BDI\",\n    \"country-code\": \"108\"\n  },\n  {\n    \"name\": \"Cabo Verde\",\n    \"alpha-3\": \"CPV\",\n    \"country-code\": \"132\"\n  },\n  {\n    \"name\": \"Cambodia\",\n    \"alpha-3\": \"KHM\",\n    \"country-code\": \"116\"\n  },\n  {\n    \"name\": \"Cameroon\",\n    \"alpha-3\": \"CMR\",\n    \"country-code\": \"120\"\n  },\n  {\n    \"name\": \"Canada\",\n    \"alpha-3\": \"CAN\",\n    \"country-code\": \"124\"\n  },\n  {\n    \"name\": \"Cayman Islands\",\n    \"alpha-3\": \"CYM\",\n    \"country-code\": \"136\"\n  },\n  {\n    \"name\": \"Central African Republic\",\n    \"alpha-3\": \"CAF\",\n    \"country-code\": \"140\"\n  },\n  {\n    \"name\": \"Chad\",\n    \"alpha-3\": \"TCD\",\n    \"country-code\": \"148\"\n  },\n  {\n    \"name\": \"Chile\",\n    \"alpha-3\": \"CHL\",\n    \"country-code\": \"152\"\n  },\n  {\n    \"name\": \"China\",\n    \"alpha-3\": \"CHN\",\n    \"country-code\": \"156\"\n  },\n  {\n    \"name\": \"Christmas Island\",\n    \"alpha-3\": \"CXR\",\n    \"country-code\": \"162\"\n  },\n  {\n    \"name\": \"Cocos (Keeling) Islands\",\n    \"alpha-3\": \"CCK\",\n    \"country-code\": \"166\"\n  },\n  {\n    \"name\": \"Colombia\",\n    \"alpha-3\": \"COL\",\n    \"country-code\": \"170\"\n  },\n  {\n    \"name\": \"Comoros\",\n    \"alpha-3\": \"COM\",\n    \"country-code\": \"174\"\n  },\n  {\n    \"name\": \"Congo\",\n    \"alpha-3\": \"COG\",\n    \"country-code\": \"178\"\n  },\n  {\n    \"name\": \"Congo, Democratic Republic of the\",\n    \"alpha-3\": \"COD\",\n    \"country-code\": \"180\"\n  },\n  {\n    \"name\": \"Cook Islands\",\n    \"alpha-3\": \"COK\",\n    \"country-code\": \"184\"\n  },\n  {\n    \"name\": \"Costa Rica\",\n    \"alpha-3\": \"CRI\",\n    \"country-code\": \"188\"\n  },\n  {\n    \"name\": \"Côte d'Ivoire\",\n    \"alpha-3\": \"CIV\",\n    \"country-code\": \"384\"\n  },\n  {\n    \"name\": \"Croatia\",\n    \"alpha-3\": \"HRV\",\n    \"country-code\": \"191\"\n  },\n  {\n    \"name\": \"Cuba\",\n    \"alpha-3\": \"CUB\",\n    \"country-code\": \"192\"\n  },\n  {\n    \"name\": \"Curaçao\",\n    \"alpha-3\": \"CUW\",\n    \"country-code\": \"531\"\n  },\n  {\n    \"name\": \"Cyprus\",\n    \"alpha-3\": \"CYP\",\n    \"country-code\": \"196\"\n  },\n  {\n    \"name\": \"Czechia\",\n    \"alpha-3\": \"CZE\",\n    \"country-code\": \"203\"\n  },\n  {\n    \"name\": \"Denmark\",\n    \"alpha-3\": \"DNK\",\n    \"country-code\": \"208\"\n  },\n  {\n    \"name\": \"Djibouti\",\n    \"alpha-3\": \"DJI\",\n    \"country-code\": \"262\"\n  },\n  {\n    \"name\": \"Dominica\",\n    \"alpha-3\": \"DMA\",\n    \"country-code\": \"212\"\n  },\n  {\n    \"name\": \"Dominican Republic\",\n    \"alpha-3\": \"DOM\",\n    \"country-code\": \"214\"\n  },\n  {\n    \"name\": \"Ecuador\",\n    \"alpha-3\": \"ECU\",\n    \"country-code\": \"218\"\n  },\n  {\n    \"name\": \"Egypt\",\n    \"alpha-3\": \"EGY\",\n    \"country-code\": \"818\"\n  },\n  {\n    \"name\": \"El Salvador\",\n    \"alpha-3\": \"SLV\",\n    \"country-code\": \"222\"\n  },\n  {\n    \"name\": \"Equatorial Guinea\",\n    \"alpha-3\": \"GNQ\",\n    \"country-code\": \"226\"\n  },\n  {\n    \"name\": \"Eritrea\",\n    \"alpha-3\": \"ERI\",\n    \"country-code\": \"232\"\n  },\n  {\n    \"name\": \"Estonia\",\n    \"alpha-3\": \"EST\",\n    \"country-code\": \"233\"\n  },\n  {\n    \"name\": \"Eswatini\",\n    \"alpha-3\": \"SWZ\",\n    \"country-code\": \"748\"\n  },\n  {\n    \"name\": \"Ethiopia\",\n    \"alpha-3\": \"ETH\",\n    \"country-code\": \"231\"\n  },\n  {\n    \"name\": \"Falkland Islands (Malvinas)\",\n    \"alpha-3\": \"FLK\",\n    \"country-code\": \"238\"\n  },\n  {\n    \"name\": \"Faroe Islands\",\n    \"alpha-3\": \"FRO\",\n    \"country-code\": \"234\"\n  },\n  {\n    \"name\": \"Fiji\",\n    \"alpha-3\": \"FJI\",\n    \"country-code\": \"242\"\n  },\n  {\n    \"name\": \"Finland\",\n    \"alpha-3\": \"FIN\",\n    \"country-code\": \"246\"\n  },\n  {\n    \"name\": \"France\",\n    \"alpha-3\": \"FRA\",\n    \"country-code\": \"250\"\n  },\n  {\n    \"name\": \"French Guiana\",\n    \"alpha-3\": \"GUF\",\n    \"country-code\": \"254\"\n  },\n  {\n    \"name\": \"French Polynesia\",\n    \"alpha-3\": \"PYF\",\n    \"country-code\": \"258\"\n  },\n  {\n    \"name\": \"French Southern Territories\",\n    \"alpha-3\": \"ATF\",\n    \"country-code\": \"260\"\n  },\n  {\n    \"name\": \"Gabon\",\n    \"alpha-3\": \"GAB\",\n    \"country-code\": \"266\"\n  },\n  {\n    \"name\": \"Gambia\",\n    \"alpha-3\": \"GMB\",\n    \"country-code\": \"270\"\n  },\n  {\n    \"name\": \"Georgia\",\n    \"alpha-3\": \"GEO\",\n    \"country-code\": \"268\"\n  },\n  {\n    \"name\": \"Germany\",\n    \"alpha-3\": \"DEU\",\n    \"country-code\": \"276\"\n  },\n  {\n    \"name\": \"Ghana\",\n    \"alpha-3\": \"GHA\",\n    \"country-code\": \"288\"\n  },\n  {\n    \"name\": \"Gibraltar\",\n    \"alpha-3\": \"GIB\",\n    \"country-code\": \"292\"\n  },\n  {\n    \"name\": \"Greece\",\n    \"alpha-3\": \"GRC\",\n    \"country-code\": \"300\"\n  },\n  {\n    \"name\": \"Greenland\",\n    \"alpha-3\": \"GRL\",\n    \"country-code\": \"304\"\n  },\n  {\n    \"name\": \"Grenada\",\n    \"alpha-3\": \"GRD\",\n    \"country-code\": \"308\"\n  },\n  {\n    \"name\": \"Guadeloupe\",\n    \"alpha-3\": \"GLP\",\n    \"country-code\": \"312\"\n  },\n  {\n    \"name\": \"Guam\",\n    \"alpha-3\": \"GUM\",\n    \"country-code\": \"316\"\n  },\n  {\n    \"name\": \"Guatemala\",\n    \"alpha-3\": \"GTM\",\n    \"country-code\": \"320\"\n  },\n  {\n    \"name\": \"Guernsey\",\n    \"alpha-3\": \"GGY\",\n    \"country-code\": \"831\"\n  },\n  {\n    \"name\": \"Guinea\",\n    \"alpha-3\": \"GIN\",\n    \"country-code\": \"324\"\n  },\n  {\n    \"name\": \"Guinea-Bissau\",\n    \"alpha-3\": \"GNB\",\n    \"country-code\": \"624\"\n  },\n  {\n    \"name\": \"Guyana\",\n    \"alpha-3\": \"GUY\",\n    \"country-code\": \"328\"\n  },\n  {\n    \"name\": \"Haiti\",\n    \"alpha-3\": \"HTI\",\n    \"country-code\": \"332\"\n  },\n  {\n    \"name\": \"Heard Island and McDonald Islands\",\n    \"alpha-3\": \"HMD\",\n    \"country-code\": \"334\"\n  },\n  {\n    \"name\": \"Holy See\",\n    \"alpha-3\": \"VAT\",\n    \"country-code\": \"336\"\n  },\n  {\n    \"name\": \"Honduras\",\n    \"alpha-3\": \"HND\",\n    \"country-code\": \"340\"\n  },\n  {\n    \"name\": \"Hong Kong\",\n    \"alpha-3\": \"HKG\",\n    \"country-code\": \"344\"\n  },\n  {\n    \"name\": \"Hungary\",\n    \"alpha-3\": \"HUN\",\n    \"country-code\": \"348\"\n  },\n  {\n    \"name\": \"Iceland\",\n    \"alpha-3\": \"ISL\",\n    \"country-code\": \"352\"\n  },\n  {\n    \"name\": \"India\",\n    \"alpha-3\": \"IND\",\n    \"country-code\": \"356\"\n  },\n  {\n    \"name\": \"Indonesia\",\n    \"alpha-3\": \"IDN\",\n    \"country-code\": \"360\"\n  },\n  {\n    \"name\": \"Iran (Islamic Republic of)\",\n    \"alpha-3\": \"IRN\",\n    \"country-code\": \"364\"\n  },\n  {\n    \"name\": \"Iraq\",\n    \"alpha-3\": \"IRQ\",\n    \"country-code\": \"368\"\n  },\n  {\n    \"name\": \"Ireland\",\n    \"alpha-3\": \"IRL\",\n    \"country-code\": \"372\"\n  },\n  {\n    \"name\": \"Isle of Man\",\n    \"alpha-3\": \"IMN\",\n    \"country-code\": \"833\"\n  },\n  {\n    \"name\": \"Israel\",\n    \"alpha-3\": \"ISR\",\n    \"country-code\": \"376\"\n  },\n  {\n    \"name\": \"Italy\",\n    \"alpha-3\": \"ITA\",\n    \"country-code\": \"380\"\n  },\n  {\n    \"name\": \"Jamaica\",\n    \"alpha-3\": \"JAM\",\n    \"country-code\": \"388\"\n  },\n  {\n    \"name\": \"Japan\",\n    \"alpha-3\": \"JPN\",\n    \"country-code\": \"392\"\n  },\n  {\n    \"name\": \"Jersey\",\n    \"alpha-3\": \"JEY\",\n    \"country-code\": \"832\"\n  },\n  {\n    \"name\": \"Jordan\",\n    \"alpha-3\": \"JOR\",\n    \"country-code\": \"400\"\n  },\n  {\n    \"name\": \"Kazakhstan\",\n    \"alpha-3\": \"KAZ\",\n    \"country-code\": \"398\"\n  },\n  {\n    \"name\": \"Kenya\",\n    \"alpha-3\": \"KEN\",\n    \"country-code\": \"404\"\n  },\n  {\n    \"name\": \"Kiribati\",\n    \"alpha-3\": \"KIR\",\n    \"country-code\": \"296\"\n  },\n  {\n    \"name\": \"Korea (Democratic People's Republic of)\",\n    \"alpha-3\": \"PRK\",\n    \"country-code\": \"408\"\n  },\n  {\n    \"name\": \"Korea, Republic of\",\n    \"alpha-3\": \"KOR\",\n    \"country-code\": \"410\"\n  },\n  {\n    \"name\": \"Kuwait\",\n    \"alpha-3\": \"KWT\",\n    \"country-code\": \"414\"\n  },\n  {\n    \"name\": \"Kyrgyzstan\",\n    \"alpha-3\": \"KGZ\",\n    \"country-code\": \"417\"\n  },\n  {\n    \"name\": \"Lao People's Democratic Republic\",\n    \"alpha-3\": \"LAO\",\n    \"country-code\": \"418\"\n  },\n  {\n    \"name\": \"Latvia\",\n    \"alpha-3\": \"LVA\",\n    \"country-code\": \"428\"\n  },\n  {\n    \"name\": \"Lebanon\",\n    \"alpha-3\": \"LBN\",\n    \"country-code\": \"422\"\n  },\n  {\n    \"name\": \"Lesotho\",\n    \"alpha-3\": \"LSO\",\n    \"country-code\": \"426\"\n  },\n  {\n    \"name\": \"Liberia\",\n    \"alpha-3\": \"LBR\",\n    \"country-code\": \"430\"\n  },\n  {\n    \"name\": \"Libya\",\n    \"alpha-3\": \"LBY\",\n    \"country-code\": \"434\"\n  },\n  {\n    \"name\": \"Liechtenstein\",\n    \"alpha-3\": \"LIE\",\n    \"country-code\": \"438\"\n  },\n  {\n    \"name\": \"Lithuania\",\n    \"alpha-3\": \"LTU\",\n    \"country-code\": \"440\"\n  },\n  {\n    \"name\": \"Luxembourg\",\n    \"alpha-3\": \"LUX\",\n    \"country-code\": \"442\"\n  },\n  {\n    \"name\": \"Macao\",\n    \"alpha-3\": \"MAC\",\n    \"country-code\": \"446\"\n  },\n  {\n    \"name\": \"Madagascar\",\n    \"alpha-3\": \"MDG\",\n    \"country-code\": \"450\"\n  },\n  {\n    \"name\": \"Malawi\",\n    \"alpha-3\": \"MWI\",\n    \"country-code\": \"454\"\n  },\n  {\n    \"name\": \"Malaysia\",\n    \"alpha-3\": \"MYS\",\n    \"country-code\": \"458\"\n  },\n  {\n    \"name\": \"Maldives\",\n    \"alpha-3\": \"MDV\",\n    \"country-code\": \"462\"\n  },\n  {\n    \"name\": \"Mali\",\n    \"alpha-3\": \"MLI\",\n    \"country-code\": \"466\"\n  },\n  {\n    \"name\": \"Malta\",\n    \"alpha-3\": \"MLT\",\n    \"country-code\": \"470\"\n  },\n  {\n    \"name\": \"Marshall Islands\",\n    \"alpha-3\": \"MHL\",\n    \"country-code\": \"584\"\n  },\n  {\n    \"name\": \"Martinique\",\n    \"alpha-3\": \"MTQ\",\n    \"country-code\": \"474\"\n  },\n  {\n    \"name\": \"Mauritania\",\n    \"alpha-3\": \"MRT\",\n    \"country-code\": \"478\"\n  },\n  {\n    \"name\": \"Mauritius\",\n    \"alpha-3\": \"MUS\",\n    \"country-code\": \"480\"\n  },\n  {\n    \"name\": \"Mayotte\",\n    \"alpha-3\": \"MYT\",\n    \"country-code\": \"175\"\n  },\n  {\n    \"name\": \"Mexico\",\n    \"alpha-3\": \"MEX\",\n    \"country-code\": \"484\"\n  },\n  {\n    \"name\": \"Micronesia (Federated States of)\",\n    \"alpha-3\": \"FSM\",\n    \"country-code\": \"583\"\n  },\n  {\n    \"name\": \"Moldova, Republic of\",\n    \"alpha-3\": \"MDA\",\n    \"country-code\": \"498\"\n  },\n  {\n    \"name\": \"Monaco\",\n    \"alpha-3\": \"MCO\",\n    \"country-code\": \"492\"\n  },\n  {\n    \"name\": \"Mongolia\",\n    \"alpha-3\": \"MNG\",\n    \"country-code\": \"496\"\n  },\n  {\n    \"name\": \"Montenegro\",\n    \"alpha-3\": \"MNE\",\n    \"country-code\": \"499\"\n  },\n  {\n    \"name\": \"Montserrat\",\n    \"alpha-3\": \"MSR\",\n    \"country-code\": \"500\"\n  },\n  {\n    \"name\": \"Morocco\",\n    \"alpha-3\": \"MAR\",\n    \"country-code\": \"504\"\n  },\n  {\n    \"name\": \"Mozambique\",\n    \"alpha-3\": \"MOZ\",\n    \"country-code\": \"508\"\n  },\n  {\n    \"name\": \"Myanmar\",\n    \"alpha-3\": \"MMR\",\n    \"country-code\": \"104\"\n  },\n  {\n    \"name\": \"Namibia\",\n    \"alpha-3\": \"NAM\",\n    \"country-code\": \"516\"\n  },\n  {\n    \"name\": \"Nauru\",\n    \"alpha-3\": \"NRU\",\n    \"country-code\": \"520\"\n  },\n  {\n    \"name\": \"Nepal\",\n    \"alpha-3\": \"NPL\",\n    \"country-code\": \"524\"\n  },\n  {\n    \"name\": \"Netherlands\",\n    \"alpha-3\": \"NLD\",\n    \"country-code\": \"528\"\n  },\n  {\n    \"name\": \"New Caledonia\",\n    \"alpha-3\": \"NCL\",\n    \"country-code\": \"540\"\n  },\n  {\n    \"name\": \"New Zealand\",\n    \"alpha-3\": \"NZL\",\n    \"country-code\": \"554\"\n  },\n  {\n    \"name\": \"Nicaragua\",\n    \"alpha-3\": \"NIC\",\n    \"country-code\": \"558\"\n  },\n  {\n    \"name\": \"Niger\",\n    \"alpha-3\": \"NER\",\n    \"country-code\": \"562\"\n  },\n  {\n    \"name\": \"Nigeria\",\n    \"alpha-3\": \"NGA\",\n    \"country-code\": \"566\"\n  },\n  {\n    \"name\": \"Niue\",\n    \"alpha-3\": \"NIU\",\n    \"country-code\": \"570\"\n  },\n  {\n    \"name\": \"Norfolk Island\",\n    \"alpha-3\": \"NFK\",\n    \"country-code\": \"574\"\n  },\n  {\n    \"name\": \"North Macedonia\",\n    \"alpha-3\": \"MKD\",\n    \"country-code\": \"807\"\n  },\n  {\n    \"name\": \"Northern Mariana Islands\",\n    \"alpha-3\": \"MNP\",\n    \"country-code\": \"580\"\n  },\n  {\n    \"name\": \"Norway\",\n    \"alpha-3\": \"NOR\",\n    \"country-code\": \"578\"\n  },\n  {\n    \"name\": \"Oman\",\n    \"alpha-3\": \"OMN\",\n    \"country-code\": \"512\"\n  },\n  {\n    \"name\": \"Pakistan\",\n    \"alpha-3\": \"PAK\",\n    \"country-code\": \"586\"\n  },\n  {\n    \"name\": \"Palau\",\n    \"alpha-3\": \"PLW\",\n    \"country-code\": \"585\"\n  },\n  {\n    \"name\": \"Palestine, State of\",\n    \"alpha-3\": \"PSE\",\n    \"country-code\": \"275\"\n  },\n  {\n    \"name\": \"Panama\",\n    \"alpha-3\": \"PAN\",\n    \"country-code\": \"591\"\n  },\n  {\n    \"name\": \"Papua New Guinea\",\n    \"alpha-3\": \"PNG\",\n    \"country-code\": \"598\"\n  },\n  {\n    \"name\": \"Paraguay\",\n    \"alpha-3\": \"PRY\",\n    \"country-code\": \"600\"\n  },\n  {\n    \"name\": \"Peru\",\n    \"alpha-3\": \"PER\",\n    \"country-code\": \"604\"\n  },\n  {\n    \"name\": \"Philippines\",\n    \"alpha-3\": \"PHL\",\n    \"country-code\": \"608\"\n  },\n  {\n    \"name\": \"Pitcairn\",\n    \"alpha-3\": \"PCN\",\n    \"country-code\": \"612\"\n  },\n  {\n    \"name\": \"Poland\",\n    \"alpha-3\": \"POL\",\n    \"country-code\": \"616\"\n  },\n  {\n    \"name\": \"Portugal\",\n    \"alpha-3\": \"PRT\",\n    \"country-code\": \"620\"\n  },\n  {\n    \"name\": \"Puerto Rico\",\n    \"alpha-3\": \"PRI\",\n    \"country-code\": \"630\"\n  },\n  {\n    \"name\": \"Qatar\",\n    \"alpha-3\": \"QAT\",\n    \"country-code\": \"634\"\n  },\n  {\n    \"name\": \"Réunion\",\n    \"alpha-3\": \"REU\",\n    \"country-code\": \"638\"\n  },\n  {\n    \"name\": \"Romania\",\n    \"alpha-3\": \"ROU\",\n    \"country-code\": \"642\"\n  },\n  {\n    \"name\": \"Russian Federation\",\n    \"alpha-3\": \"RUS\",\n    \"country-code\": \"643\"\n  },\n  {\n    \"name\": \"Rwanda\",\n    \"alpha-3\": \"RWA\",\n    \"country-code\": \"646\"\n  },\n  {\n    \"name\": \"Saint Barthélemy\",\n    \"alpha-3\": \"BLM\",\n    \"country-code\": \"652\"\n  },\n  {\n    \"name\": \"Saint Helena, Ascension and Tristan da Cunha\",\n    \"alpha-3\": \"SHN\",\n    \"country-code\": \"654\"\n  },\n  {\n    \"name\": \"Saint Kitts and Nevis\",\n    \"alpha-3\": \"KNA\",\n    \"country-code\": \"659\"\n  },\n  {\n    \"name\": \"Saint Lucia\",\n    \"alpha-3\": \"LCA\",\n    \"country-code\": \"662\"\n  },\n  {\n    \"name\": \"Saint Martin (French part)\",\n    \"alpha-3\": \"MAF\",\n    \"country-code\": \"663\"\n  },\n  {\n    \"name\": \"Saint Pierre and Miquelon\",\n    \"alpha-3\": \"SPM\",\n    \"country-code\": \"666\"\n  },\n  {\n    \"name\": \"Saint Vincent and the Grenadines\",\n    \"alpha-3\": \"VCT\",\n    \"country-code\": \"670\"\n  },\n  {\n    \"name\": \"Samoa\",\n    \"alpha-3\": \"WSM\",\n    \"country-code\": \"882\"\n  },\n  {\n    \"name\": \"San Marino\",\n    \"alpha-3\": \"SMR\",\n    \"country-code\": \"674\"\n  },\n  {\n    \"name\": \"Sao Tome and Principe\",\n    \"alpha-3\": \"STP\",\n    \"country-code\": \"678\"\n  },\n  {\n    \"name\": \"Saudi Arabia\",\n    \"alpha-3\": \"SAU\",\n    \"country-code\": \"682\"\n  },\n  {\n    \"name\": \"Senegal\",\n    \"alpha-3\": \"SEN\",\n    \"country-code\": \"686\"\n  },\n  {\n    \"name\": \"Serbia\",\n    \"alpha-3\": \"SRB\",\n    \"country-code\": \"688\"\n  },\n  {\n    \"name\": \"Seychelles\",\n    \"alpha-3\": \"SYC\",\n    \"country-code\": \"690\"\n  },\n  {\n    \"name\": \"Sierra Leone\",\n    \"alpha-3\": \"SLE\",\n    \"country-code\": \"694\"\n  },\n  {\n    \"name\": \"Singapore\",\n    \"alpha-3\": \"SGP\",\n    \"country-code\": \"702\"\n  },\n  {\n    \"name\": \"Sint Maarten (Dutch part)\",\n    \"alpha-3\": \"SXM\",\n    \"country-code\": \"534\"\n  },\n  {\n    \"name\": \"Slovakia\",\n    \"alpha-3\": \"SVK\",\n    \"country-code\": \"703\"\n  },\n  {\n    \"name\": \"Slovenia\",\n    \"alpha-3\": \"SVN\",\n    \"country-code\": \"705\"\n  },\n  {\n    \"name\": \"Solomon Islands\",\n    \"alpha-3\": \"SLB\",\n    \"country-code\": \"090\"\n  },\n  {\n    \"name\": \"Somalia\",\n    \"alpha-3\": \"SOM\",\n    \"country-code\": \"706\"\n  },\n  {\n    \"name\": \"South Africa\",\n    \"alpha-3\": \"ZAF\",\n    \"country-code\": \"710\"\n  },\n  {\n    \"name\": \"South Georgia and the South Sandwich Islands\",\n    \"alpha-3\": \"SGS\",\n    \"country-code\": \"239\"\n  },\n  {\n    \"name\": \"South Sudan\",\n    \"alpha-3\": \"SSD\",\n    \"country-code\": \"728\"\n  },\n  {\n    \"name\": \"Spain\",\n    \"alpha-3\": \"ESP\",\n    \"country-code\": \"724\"\n  },\n  {\n    \"name\": \"Sri Lanka\",\n    \"alpha-3\": \"LKA\",\n    \"country-code\": \"144\"\n  },\n  {\n    \"name\": \"Sudan\",\n    \"alpha-3\": \"SDN\",\n    \"country-code\": \"729\"\n  },\n  {\n    \"name\": \"Suriname\",\n    \"alpha-3\": \"SUR\",\n    \"country-code\": \"740\"\n  },\n  {\n    \"name\": \"Svalbard and Jan Mayen\",\n    \"alpha-3\": \"SJM\",\n    \"country-code\": \"744\"\n  },\n  {\n    \"name\": \"Sweden\",\n    \"alpha-3\": \"SWE\",\n    \"country-code\": \"752\"\n  },\n  {\n    \"name\": \"Switzerland\",\n    \"alpha-3\": \"CHE\",\n    \"country-code\": \"756\"\n  },\n  {\n    \"name\": \"Syrian Arab Republic\",\n    \"alpha-3\": \"SYR\",\n    \"country-code\": \"760\"\n  },\n  {\n    \"name\": \"Taiwan, Province of China\",\n    \"alpha-3\": \"TWN\",\n    \"country-code\": \"158\"\n  },\n  {\n    \"name\": \"Tajikistan\",\n    \"alpha-3\": \"TJK\",\n    \"country-code\": \"762\"\n  },\n  {\n    \"name\": \"Tanzania, United Republic of\",\n    \"alpha-3\": \"TZA\",\n    \"country-code\": \"834\"\n  },\n  {\n    \"name\": \"Thailand\",\n    \"alpha-3\": \"THA\",\n    \"country-code\": \"764\"\n  },\n  {\n    \"name\": \"Timor-Leste\",\n    \"alpha-3\": \"TLS\",\n    \"country-code\": \"626\"\n  },\n  {\n    \"name\": \"Togo\",\n    \"alpha-3\": \"TGO\",\n    \"country-code\": \"768\"\n  },\n  {\n    \"name\": \"Tokelau\",\n    \"alpha-3\": \"TKL\",\n    \"country-code\": \"772\"\n  },\n  {\n    \"name\": \"Tonga\",\n    \"alpha-3\": \"TON\",\n    \"country-code\": \"776\"\n  },\n  {\n    \"name\": \"Trinidad and Tobago\",\n    \"alpha-3\": \"TTO\",\n    \"country-code\": \"780\"\n  },\n  {\n    \"name\": \"Tunisia\",\n    \"alpha-3\": \"TUN\",\n    \"country-code\": \"788\"\n  },\n  {\n    \"name\": \"Turkey\",\n    \"alpha-3\": \"TUR\",\n    \"country-code\": \"792\"\n  },\n  {\n    \"name\": \"Turkmenistan\",\n    \"alpha-3\": \"TKM\",\n    \"country-code\": \"795\"\n  },\n  {\n    \"name\": \"Turks and Caicos Islands\",\n    \"alpha-3\": \"TCA\",\n    \"country-code\": \"796\"\n  },\n  {\n    \"name\": \"Tuvalu\",\n    \"alpha-3\": \"TUV\",\n    \"country-code\": \"798\"\n  },\n  {\n    \"name\": \"Uganda\",\n    \"alpha-3\": \"UGA\",\n    \"country-code\": \"800\"\n  },\n  {\n    \"name\": \"Ukraine\",\n    \"alpha-3\": \"UKR\",\n    \"country-code\": \"804\"\n  },\n  {\n    \"name\": \"United Arab Emirates\",\n    \"alpha-3\": \"ARE\",\n    \"country-code\": \"784\"\n  },\n  {\n    \"name\": \"United Kingdom of Great Britain and Northern Ireland\",\n    \"alpha-3\": \"GBR\",\n    \"country-code\": \"826\"\n  },\n  {\n    \"name\": \"United States of America\",\n    \"alpha-3\": \"USA\",\n    \"country-code\": \"840\"\n  },\n  {\n    \"name\": \"United States Minor Outlying Islands\",\n    \"alpha-3\": \"UMI\",\n    \"country-code\": \"581\"\n  },\n  {\n    \"name\": \"Uruguay\",\n    \"alpha-3\": \"URY\",\n    \"country-code\": \"858\"\n  },\n  {\n    \"name\": \"Uzbekistan\",\n    \"alpha-3\": \"UZB\",\n    \"country-code\": \"860\"\n  },\n  {\n    \"name\": \"Vanuatu\",\n    \"alpha-3\": \"VUT\",\n    \"country-code\": \"548\"\n  },\n  {\n    \"name\": \"Venezuela (Bolivarian Republic of)\",\n    \"alpha-3\": \"VEN\",\n    \"country-code\": \"862\"\n  },\n  {\n    \"name\": \"Viet Nam\",\n    \"alpha-3\": \"VNM\",\n    \"country-code\": \"704\"\n  },\n  {\n    \"name\": \"Virgin Islands (British)\",\n    \"alpha-3\": \"VGB\",\n    \"country-code\": \"092\"\n  },\n  {\n    \"name\": \"Virgin Islands (U.S.)\",\n    \"alpha-3\": \"VIR\",\n    \"country-code\": \"850\"\n  },\n  {\n    \"name\": \"Wallis and Futuna\",\n    \"alpha-3\": \"WLF\",\n    \"country-code\": \"876\"\n  },\n  {\n    \"name\": \"Western Sahara\",\n    \"alpha-3\": \"ESH\",\n    \"country-code\": \"732\"\n  },\n  {\n    \"name\": \"Yemen\",\n    \"alpha-3\": \"YEM\",\n    \"country-code\": \"887\"\n  },\n  {\n    \"name\": \"Zambia\",\n    \"alpha-3\": \"ZMB\",\n    \"country-code\": \"894\"\n  },\n  {\n    \"name\": \"Zimbabwe\",\n    \"alpha-3\": \"ZWE\",\n    \"country-code\": \"716\"\n  }\n]\n\nexport default countries","import React, {Component} from 'react';\nimport countries from \"./data/iso_countries\";\nimport Chart from \"chart.js\";\nimport {pluck} from \"underscore\";\nimport timeseries from \"./data/timeseries\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass App extends Component {\n  chartRef = React.createRef();\n\n  state = {\n    country: 'ESP',\n    slice: 30,\n    data: null,\n    chart: null,\n    visualization: 'increment',\n    deathsDataset: true,\n    confirmedDataset: false,\n    recoveredDataset: false\n  }\n\n  updateGraph() {\n    let {slice, data, deathsDataset, confirmedDataset, recoveredDataset, visualization} = this.state;\n    let datasets = [];\n\n    let labels = pluck(data, 'date').slice(-slice)\n\n    if (confirmedDataset) {\n      let confirmed = this.fetchDataByVisualization(this.state.data, 'confirmed', visualization).slice(-slice)\n\n      datasets.push({\n        label: 'Confirmed',\n        borderColor: 'rgba(234, 237, 54)',\n        backgroundColor: 'rgba(234, 237, 54)',\n        data: confirmed,\n        fill: false,\n      })\n    }\n\n    if (deathsDataset) {\n      let deaths = this.fetchDataByVisualization(this.state.data, 'deaths', visualization).slice(-slice)\n\n      datasets.push({\n        label: 'Deaths',\n        borderColor: 'rgb(237,106,54)',\n        backgroundColor: 'rgb(237,106,54)',\n        data: deaths,\n        fill: false,\n      })\n    }\n\n    if (recoveredDataset) {\n      let recovered = this.fetchDataByVisualization(this.state.data, 'recovered', visualization).slice(-slice)\n\n      datasets.push({\n        label: 'Recovered',\n        borderColor: 'rgb(72,237,54)',\n        backgroundColor: 'rgb(72,237,54)',\n        data: recovered,\n        fill: false,\n      })\n    }\n\n    var config = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: 'Daily general report COVID-19'\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: false,\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: true\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Date'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Value'\n            }\n          }]\n        }\n      }\n    };\n\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    if (this.state.chart) {\n      this.state.chart.destroy()\n    }\n\n    let chart = new Chart(myChartRef, config);\n\n    this.setState({\n      chart: chart\n    })\n  }\n\n  fetchData() {\n    fetch('https://pomber.github.io/covid19/timeseries.json')\n        .then(response => {\n          return response.json();\n        })\n        .then(myJson => {\n          this.setState({\n            data: this.buildFormattedData(myJson['Spain'])\n          }, () => {\n            this.updateGraph()\n          })\n        });\n\n    /*this.setState({\n      data: this.buildFormattedData(timeseries['Spain'])\n    }, () => {\n      this.updateGraph()\n    })*/\n  }\n\n  fetchDataByVisualization(data, value, visualization) {\n    return data.map(e => {\n      return e[value][visualization];\n    })\n  }\n\n  buildFormattedData(data) {\n    return data.map((e, index) => {\n      let previousElement = data[index - 1] !== undefined ? data[index - 1] : null\n\n      return {\n        date: e.date,\n        deaths: this.buildDataForKey(previousElement, \"deaths\", e),\n        recovered: this.buildDataForKey(previousElement, \"recovered\", e),\n        confirmed: this.buildDataForKey(previousElement, \"confirmed\", e),\n      };\n    })\n  }\n\n  buildDataForKey(previousValue, keyName, currentValue) {\n    if (!previousValue)\n      return {absolute: currentValue[keyName], percent: 0, increment: 0};\n\n    let increment = currentValue[keyName] - previousValue[keyName];\n    let percentIncrement = parseFloat((increment / previousValue[keyName] * 100).toFixed(3))\n\n    return {absolute: currentValue[keyName], percent: percentIncrement, increment: increment};\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  changeCountry = e => {\n    console.log(\"cambio country\")\n    this.setState({\n      country: e.target.value\n    }, () => {\n      //this.fetchData()\n    })\n  }\n\n  changeDays = e => {\n    this.setState({\n      slice: e.target.value\n    })\n  }\n\n  switchDeathsDataset = e => {\n    this.setState({\n      deathsDataset: e.target.checked\n    }, () => {\n      this.updateGraph()\n    })\n  }\n\n  switchConfirmedDataset = e => {\n    this.setState({\n      confirmedDataset: e.target.checked\n    }, () => {\n      this.updateGraph()\n    })\n  }\n\n  switchRecoveredDataset = e => {\n    this.setState({\n      recoveredDataset: e.target.checked\n    }, () => {\n      this.updateGraph()\n    })\n  }\n\n  handleVisualizationChange = e => {\n    this.setState({\n      visualization: e.target.value\n    }, () => {\n      this.updateGraph()\n    })\n  }\n\n  render() {\n    return (\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <FormControlLabel\n                control={\n                  <Checkbox\n                      checked={this.state.deathsDataset}\n                      name=\"checkedB\"\n                      color=\"primary\"\n                      onChange={this.switchDeathsDataset}\n                  />\n                }\n                label=\"Deaths\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <FormControlLabel\n                control={\n                  <Checkbox\n                      checked={this.state.recoveredDataset}\n                      name=\"checkedB\"\n                      color=\"primary\"\n                      onChange={this.switchRecoveredDataset}\n                  />\n                }\n                label=\"Recovered\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <FormControlLabel\n                control={\n                  <Checkbox\n                      checked={this.state.confirmedDataset}\n                      name=\"checkedB\"\n                      color=\"primary\"\n                      onChange={this.switchConfirmedDataset}\n                  />\n                }\n                label=\"Confirmed\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <FormControl\n                fullWidth\n            >\n              <InputLabel id=\"demo-simple-select-label\">Visualization</InputLabel>\n              <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={this.state.country}\n                  onChange={this.changeCountry}\n              >\n                {countries.map(e => {\n                  return <MenuItem key={e['country-code']} value={e[\"alpha-3\"]}>{e.name}</MenuItem>\n                })}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <FormControl\n                fullWidth\n            >\n              <InputLabel id=\"demo-simple-select-label\">Visualization</InputLabel>\n              <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={this.state.visualization}\n                  onChange={this.handleVisualizationChange}\n              >\n                <MenuItem key={0} value={\"absolute\"}>Absolute</MenuItem>\n                <MenuItem key={1} value={\"percent\"}>Percent</MenuItem>\n                <MenuItem key={2} value={\"increment\"}>Increment</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={8}>\n            <TextField fullWidth id=\"standard-required\" label=\"Latest N days\" value={this.state.slice} onChange={this.changeDays} />\n          </Grid>\n          <Grid item xs={4}>\n            <Button fullWidth variant=\"contained\" color=\"primary\" onClick={e => {\n              this.updateGraph()\n            }}>\n              Update\n            </Button>\n          </Grid>\n\n          <Grid item xs={12}>\n            <canvas id=\"canvas\" ref={this.chartRef}>\n            </canvas>\n          </Grid>\n        </Grid>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}